(defwidget bar []
  (centerbox :orientation "h" :class "bar"
    (workspaces)
    (box :class "time" time)
    (sidestuff)))

(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
    {music != "" ? "󰝚 ${music} " : ""}
    unison
    (metric :label " "
            :value volume
            :onchange "pamixer --set-volume {}")
    vpn))

(defwidget workspaces []
  (box :class "workspaces"
       :orientation "h"
       :space-evenly true
       :halign "start"
       :spacing 2
    (button
      :onclick "riverctl set-focused-tags $((1 << 0))"
      :class {matches(focused-tags, "1.....") ? "focused" : "inactive"}
      {matches(occupied-tags, "1.....") ? "o" : ""})
    (button
      :onclick "riverctl set-focused-tags $((1 << 1))"
      :class {matches(focused-tags, ".1....") ? "focused" : "inactive"}
      {matches(occupied-tags, ".1....") ? "o" : ""})
    (button
      :onclick "riverctl set-focused-tags $((1 << 2))"
      :class {matches(focused-tags, "..1...") ? "focused" : "inactive"}
      {matches(occupied-tags, "..1...") ? "o" : ""})
    (button
      :onclick "riverctl set-focused-tags $((1 << 3))"
      :class {matches(focused-tags, "...1..") ? "focused" : "inactive"}
      {matches(occupied-tags, "...1..") ? "o" : ""})
    (button
      :onclick "riverctl set-focused-tags $((1 << 4))"
      :class {matches(focused-tags, "....1.") ? "focused" : "inactive"}
      {matches(occupied-tags, "....1.") ? "o" : ""})
    (button
      :onclick "riverctl set-focused-tags $((1 << 5))"
      :class {matches(focused-tags, ".....1") ? "focused" : "inactive"}
      {matches(occupied-tags, ".....1") ? "o" : ""})))

(defwidget metric [label value onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)))


(deflisten music :initial ""
  "playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true")

(deflisten focused-tags :initial "000000"
  "tail -f /tmp/river-tags | grep --line-buffered -oP '(?<=focused: )([01]{6})'")

(deflisten occupied-tags :initial "000000"
  "tail -f /tmp/river-tags | grep --line-buffered -oP '(?<=occupied: )([01]{6})'")

(defpoll volume :interval "1s"
  "scripts/getvol")

(defpoll time :interval "10s"
  "date '+%A %d %b %H:%M'")

(defpoll vpn :interval "5s"
  "sudo wg show | grep -q vpn && echo ' ' || echo '󰿆 '")

(defpoll unison :interval "5s"
  "pgrep -x unison | wc -l | grep -q 1 && echo '  UP ' || echo '  DOWN '")

(defwindow bar
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "10px"
                      :anchor "top center")
  :exclusive true
  (bar))
